<mah:MetroWindow x:Class="FusionViewer.Views.MainWindow"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                xmlns:dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
                xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                xmlns:local="clr-namespace:FusionViewer"
                xmlns:views="clr-namespace:FusionViewer.Views"
                xmlns:viewmodels="clr-namespace:FusionViewer.ViewModels"
                xmlns:serilog="clr-namespace:Serilog.Events;assembly=Serilog"
                dialog:DialogParticipation.Register="{Binding}" 
                mc:Ignorable="d"
                DataContext="{Binding Path=MainWindowViewModel, Source={StaticResource ViewModelLocator}}"
                d:DataContext="{d:DesignInstance viewmodels:MainWindowViewModel}"
                Name="mainView"
                FontSize="18" FontFamily="Segoe UI"
                d:Title="IMAGEVIEWER" TitleCharacterCasing="Normal"
                MinWidth="1400" MinHeight="800" d:Width="1400"
                ResizeMode="CanResizeWithGrip"
                WindowState="Maximized" WindowStartupLocation="CenterScreen"
                BorderBrush="{DynamicResource MahApps.Brushes.Accent}" BorderThickness="1"
                AllowDrop="True">

    <mah:MetroWindow.Title>
        <MultiBinding StringFormat="{}{0} v{1}">
            <Binding Path="Title"/>
            <Binding Path="MajorMinorVersion"/>
        </MultiBinding>
    </mah:MetroWindow.Title>

    <i:Interaction.Triggers>
        <!--- Eventhandlers to Closing events (exiting application) -->
        <i:EventTrigger EventName="Closing">
            <i:CallMethodAction TargetObject="{Binding ElementName=acquisitionView, Path=DataContext}" MethodName="OnMainWindowClosing"/>
            <i:CallMethodAction TargetObject="{Binding ElementName=playbackView, Path=DataContext}" MethodName="OnMainWindowClosing"/>
            <i:CallMethodAction TargetObject="{Binding ElementName=deviceView, Path=DataContext}" MethodName="OnMainWindowClosing"/>
        </i:EventTrigger>
        <!--- Eventhandlers to Drop events (dragging files onto UI) -->
        <i:EventTrigger EventName="Drop">
            <i:CallMethodAction TargetObject="{Binding ElementName=playbackView, Path=DataContext}" MethodName="OnDrop"/>
            <i:CallMethodAction TargetObject="{Binding ElementName=deviceView, Path=DataContext}" MethodName="OnDrop"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <mah:MetroWindow.LeftWindowCommands>
        <mah:WindowCommands>
            <Border BorderBrush="Black" BorderThickness="1" Margin="2">
                <Image Source="/Resources/Images/logo_296x296.png" Width="25" Height="25" RenderOptions.BitmapScalingMode="HighQuality"/>
            </Border>
        </mah:WindowCommands>
    </mah:MetroWindow.LeftWindowCommands>

    <!-- Keybindings for MainWindow -->
    <mah:MetroWindow.InputBindings>
        <!-- Configurations -->
        <KeyBinding Key="L" Modifiers="Ctrl" Command="{Binding Source={StaticResource ViewModelLocator}, Path=DeviceViewModel.LoadConfigurationDialogCommand}"/>
        <KeyBinding Key="S" Modifiers="Ctrl" Command="{Binding Source={StaticResource ViewModelLocator}, Path=DeviceViewModel.SaveConfigurationDialogCommand}" CommandParameter="{StaticResource TrueValue}"/>
        <!-- Recordings -->
        <KeyBinding Key="R" Modifiers="Ctrl" Command="{Binding Source={StaticResource ViewModelLocator}, Path=PlayBackViewModel.OpenSequenceCommand}"/>
        <KeyBinding Key="X" Modifiers="Ctrl" Command="{Binding Source={StaticResource ViewModelLocator}, Path=PlayBackViewModel.CloseSequenceCommand}"/>
        <!-- Acquisition -->
        <KeyBinding Key="F6" Command="{Binding Source={StaticResource ViewModelLocator}, Path=AcquisitionViewModel.PlayCommand}"/>
        <KeyBinding Key="F7" Command="{Binding Source={StaticResource ViewModelLocator}, Path=AcquisitionViewModel.StopCommand}"/>
        <KeyBinding Key="F8" Command="{Binding Source={StaticResource ViewModelLocator}, Path=AcquisitionViewModel.RecordCommand}"/>
        <!-- Display -->
        <KeyBinding Key="F11" Command="{Binding Source={StaticResource ViewModelLocator}, Path=ImageDisplayViewModel.OpenFullScreenImageWindowCommand}"/>
        <!-- Playback -->
        <KeyBinding Key="Space" Command="{Binding Source={StaticResource ViewModelLocator}, Path=PlayBackViewModel.PlayPauseCommand}"/>
        <KeyBinding Key="Right" Command="{Binding Source={StaticResource ViewModelLocator}, Path=PlayBackViewModel.StepForwardCommand}"/>
        <KeyBinding Key="Left" Command="{Binding Source={StaticResource ViewModelLocator}, Path=PlayBackViewModel.StepBackCommand}"/>
        <KeyBinding Key="Right" Modifiers="Ctrl" Command="{Binding Source={StaticResource ViewModelLocator}, Path=PlayBackViewModel.GoToEndCommand}"/>
        <KeyBinding Key="Left" Modifiers="Ctrl" Command="{Binding Source={StaticResource ViewModelLocator}, Path=PlayBackViewModel.GoToStartCommand}"/>
        <KeyBinding Key="Right" Modifiers="Shift" Command="{Binding Source={StaticResource ViewModelLocator}, Path=PlayBackViewModel.StepLargeForwardCommand}"/>
        <KeyBinding Key="Left" Modifiers="Shift" Command="{Binding Source={StaticResource ViewModelLocator}, Path=PlayBackViewModel.StepLargeBackCommand}"/>
        <!-- Log -->
        <KeyBinding Key="F10" Modifiers="Shift" Command="{Binding Source={StaticResource ViewModelLocator}, Path=MainWindowViewModel.OpenLogDialogWindowCommand}"/>
        <!-- Theme -->
        <KeyBinding Key="T" Modifiers="Alt" Command="{Binding Source={StaticResource ViewModelLocator}, Path=MainWindowViewModel.ToggleThemeCommand}"/>
        <!-- Theme -->
        <KeyBinding Key="F12" Command="{Binding Source={StaticResource ViewModelLocator}, Path=MainWindowViewModel.OpenShortcutWindowCommand}"/>
    </mah:MetroWindow.InputBindings>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="20"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="20"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>

        <!--Menu System-->
        <DockPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="5">
            <Menu x:Name="Menu" FontSize="14" DockPanel.Dock="Top">
                <MenuItem x:Name="FileMenu" Header="_File" >
                    <MenuItem Header="Load configuration..." 
                              Icon="{iconPacks:PicolIcons Kind=UploadSettings}"
                              Command="{Binding ElementName=deviceView, Path=DataContext.LoadConfigurationDialogCommand}"
                              InputGestureText="Ctrl+L"/>
                    <MenuItem Header="Save configuration"
                              Icon="{iconPacks:PicolIcons Kind=DownloadSettings}"
                              Command="{Binding ElementName=deviceView, Path=DataContext.SaveConfigurationDialogCommand}" CommandParameter="{StaticResource TrueValue}"
                              InputGestureText="Ctrl+S"/>
                    <MenuItem Header="Save configuration as..."
                              Icon="{iconPacks:PicolIcons Kind=DownloadSettings}"
                              Command="{Binding ElementName=deviceView, Path=DataContext.SaveConfigurationDialogCommand}" CommandParameter="{StaticResource FalseValue}"/>
                    <Separator />
                    <MenuItem Header="Open recording..."
                              Icon="{iconPacks:Material Kind=Filmstrip}"
                              Command="{Binding ElementName=playbackView, Path=DataContext.OpenSequenceCommand}"
                              InputGestureText="Ctrl+R"/>
                    <MenuItem Header="Close recording"
                              Icon="{iconPacks:Material Kind=FilmstripOff}"
                              Command="{Binding ElementName=playbackView, Path=DataContext.CloseSequenceCommand}"
                              InputGestureText="Ctrl+X"/>
                    <Separator />
                    <MenuItem Header="Exit" Icon="{iconPacks:Material Kind=ExitToApp}" InputGestureText="Alt+F4">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:CallMethodAction TargetObject="{Binding ElementName=mainView}" MethodName="Close"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </MenuItem>
                </MenuItem>
                <MenuItem x:Name="EditMenu" Header="_Edit" >
                    <MenuItem Header="Options..." Icon="{iconPacks:Entypo Kind=Cog}" Command="{Binding OpenOptionsWindowCommand}" />
                </MenuItem>
                <MenuItem x:Name="Window" Header="_Window">
                    <MenuItem Header="Show Full Screen" 
                              InputGestureText="F11" 
                              Icon="{iconPacks:PicolIcons Kind=Fullscreen}"
                              Command="{Binding ElementName=imageDisplayView, Path=DataContext.OpenFullScreenImageWindowCommand}"
                              ToolTip="View image in full screen mode (press F11 to exit)"/>
                </MenuItem>
                <MenuItem x:Name="HelpMenu" Header="_Help" >
                    <MenuItem Header="About..." 
                              Icon="{iconPacks:Material Kind=InformationOutline}"
                              Command="{Binding OpenAboutWindowCommand}" />
                    <Separator/>
                    <MenuItem Header="View log..." 
                              Icon="{iconPacks:JamIcons Kind=Document}"
                              Command="{Binding OpenLogDialogWindowCommand}"
                              InputGestureText="Shift+F10"/>
                    <MenuItem Header="View hot keys..." 
                              Icon="{iconPacks:PhosphorIcons Kind=KeyboardLight}"
                              Command="{Binding OpenShortcutWindowCommand}" CommandParameter="{Binding ElementName=mainView, Path=InputBindings}"
                              InputGestureText="F12"/>
                </MenuItem>
            </Menu>
        </DockPanel>

        <!--Device control (connection, selection and parameter viewing)-->
        <Expander Grid.Row="2" Grid.Column="1"
                  BorderThickness="0"
                  Margin="-15 60 5 0"
                  ExpandDirection="Right" IsExpanded="True"
                  mah:HeaderedControlHelper.HeaderBackground="Transparent" mah:HeaderedControlHelper.HeaderForeground="{DynamicResource MahApps.Brushes.ThemeForeground}">
            <Expander.Style>
                <Style TargetType="Expander">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsExpanded, RelativeSource={RelativeSource Self}}" Value="False">
                            <Setter Property="Header">
                                <Setter.Value>
                                    <TextBlock Text="Device menu" FontSize="14" FontWeight="Bold" Margin="0 3 0 0">
                                        <TextBlock.LayoutTransform>
                                            <RotateTransform Angle="90"/>
                                        </TextBlock.LayoutTransform>
                                    </TextBlock>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Padding" Value="0"/>
                            <Setter Property="ToolTip" Value="Open device menu"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsExpanded, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter Property="Header" Value=""/>
                            <Setter Property="Padding" Value="0 0 5 0"/>
                            <Setter Property="ToolTip" Value="Close device menu"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Expander.Style>
            <views:DeviceView x:Name="deviceView" d:DataContext="{Binding Source={StaticResource MockViewModelLocator}, Path=DeviceViewModel}"/>
        </Expander>

        <!--Image display-->
        <views:ImageDisplayView x:Name="imageDisplayView" 
                                Grid.Row="2" Grid.Column="2" Grid.ColumnSpan="2"
                                Margin="0 20 0 0"/>

        <!--Image processing-->
        <views:ImageProcessingView x:Name="imageProcessingView"
                                   Grid.Row="2" Grid.Column="3"
                                   Margin="0 20 0 0" 
                                   HorizontalAlignment="Center" VerticalAlignment="Top"
                                   d:DataContext="{Binding Source={StaticResource MockViewModelLocator}, Path=ImageProcessingViewModel}"/>

        <!--Image histogram-->
        <Expander Grid.Row="2" Grid.Column="5"             
                  BorderThickness="0" 
                  Margin="5 60 -15 0"
                  ExpandDirection="Left" IsExpanded="{Binding Source={StaticResource ViewModelLocator}, Path=HistogramViewModel.ShowLiveHistogram, Mode=TwoWay}"
                  mah:HeaderedControlHelper.HeaderBackground="Transparent" mah:HeaderedControlHelper.HeaderForeground="{DynamicResource MahApps.Brushes.ThemeForeground}">
            <Expander.Style>
                <Style TargetType="Expander">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsExpanded, RelativeSource={RelativeSource Self}}" Value="False">
                            <Setter Property="Header">
                                <Setter.Value>
                                    <TextBlock Text="Histogram" FontSize="14" FontWeight="Bold" Margin="0 3 0 0">
                                        <TextBlock.LayoutTransform>
                                            <RotateTransform Angle="90"/>
                                        </TextBlock.LayoutTransform>
                                    </TextBlock>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Padding" Value="0"/>
                            <Setter Property="ToolTip" Value="Show Live Histogram"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsExpanded, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter Property="Header" Value=""/>
                            <Setter Property="Padding" Value="0 0 0 0"/>
                            <Setter Property="ToolTip" Value="Close live histogram"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Expander.Style>
            <views:HistogramView x:Name="histogramView"
                             Grid.Row="2" Grid.Column="4"
                             Margin="10 0 25 0"/>
        </Expander>

        
        <views:PlayBackView x:Name="playbackView"
                            Grid.Row="3" Grid.Column="2" Grid.ColumnSpan="2"
                            HorizontalAlignment="Center"/>

        <!--Acquisition (live, stop and record)-->
        <views:AcquisitionView x:Name="acquisitionView" 
                               Grid.Row="3" Grid.Column="2" Grid.ColumnSpan="2"
                               Margin="0 30" 
                               HorizontalAlignment="Center"
                               Visibility="{Binding Source={StaticResource ViewModelLocator}, Path=PlayBackViewModel.IsLoaded, Converter={StaticResource InverseBooleanToVisibilityConverter}}"/>

        <!--Playback-->

        <!--Status bar-->
        <DockPanel Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="6">
            <StatusBar>
                <StatusBarItem>
                    <StackPanel Orientation="Horizontal">
                        <StackPanel.Resources>
                            <Style TargetType="Image" x:Key="MessageTypeIcon">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding StatusMessage.Level}" Value="{x:Static serilog:LogEventLevel.Information}">
                                        <Setter Property="Source" Value="{iconPacks:MicronsImage Kind=Info, Brush=GreenYellow}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding StatusMessage.Level}" Value="{x:Static serilog:LogEventLevel.Warning}">
                                        <Setter Property="Source" Value="{iconPacks:MicronsImage Kind=Warn, Brush=Orange}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding StatusMessage.Level}" Value="{x:Static serilog:LogEventLevel.Error}">
                                        <Setter Property="Source" Value="{iconPacks:MicronsImage Kind=Fail, Brush=OrangeRed}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Resources>
                        <Image Style="{StaticResource MessageTypeIcon}"
                               d:Source="{iconPacks:MicronsImage Kind=Info, Brush=GreenYellow}"
                               Height="16" Margin="5 0"/>
                        <TextBlock Text="{Binding StatusMessage.Text}" d:Text="Live view stopped."
                                   FontSize="12"
                                   Margin="5 0 0 0" 
                                   d:Foreground="Black"/>
                    </StackPanel>
                </StatusBarItem>
            </StatusBar>
        </DockPanel>

    </Grid>

</mah:MetroWindow>